webpackHotUpdate("main",{

/***/ "./src/utils/toastService.js":
/*!***********************************!*\
  !*** ./src/utils/toastService.js ***!
  \***********************************/
/*! no static exports found */
/*! exports used: toast */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ./node_modules/core-js/modules/es.object.define-property.js */ "./node_modules/core-js/modules/es.object.define-property.js");
var _reactJsxRuntime = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");
__webpack_require__(/*! ./node_modules/core-js/modules/es.object.assign.js */ "./node_modules/core-js/modules/es.object.assign.js");
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
var ToastService = /*#__PURE__*/_createClass(function ToastService() {
  "use strict";

  var _this = this;
  _classCallCheck(this, ToastService);
  this.addToast = function (toast) {
    if (_this.toasts.length < 3) {
      _this.toasts.push(toast);
    }
  };
  this.generateToast = function () {
    console.log("bbbbb");
    for (var _len = arguments.length, options = new Array(_len), _key = 0; _key < _len; _key++) {
      options[_key] = arguments[_key];
    }
    return /*#__PURE__*/_reactJsxRuntime.jsx(Notification, Object.assign({}, options));
  };
  this.getAllToasts = function () {
    return _this.toasts;
  };
  if (!toasts) toasts = this;
  this.toasts = [];
  return toasts;
});
var toast = new ToastService();
toast.get;

/***/ })

})
//# sourceMappingURL=main.09f8ef439a6e60b7be4a.hot-update.js.map