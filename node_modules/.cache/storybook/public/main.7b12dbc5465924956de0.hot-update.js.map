{"version":3,"file":"main.7b12dbc5465924956de0.hot-update.js","sources":["webpack:///./src/components/Notification.jsx","webpack:///./src/components/styled.js","webpack:///./stories/Notification.stories.js"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport ReactDOM, { createPortal } from \"react-dom\";\r\nimport { StyledCross, StyledNotification } from \"./styled\";\r\nimport theme from \"\"\r\n\r\nfunction Notification({ label, backgroundColor=\"red\", variant }) {\r\n  const modalRoot = document.getElementById(\"modal\");\r\n  let elem = document.createElement(\"div\");\r\n\r\n  useEffect(() => {\r\n    modalRoot.appendChild(elem);\r\n    return () => {\r\n      modalRoot.removeChild(elem);\r\n    };\r\n  }, []);\r\n\r\n\r\n\r\n\r\n  return (\r\n    <StyledNotification backgroundColor={backgroundColor}>\r\n      {label}\r\n      <StyledCross>X</StyledCross>\r\n    </StyledNotification>\r\n  );\r\n}\r\n\r\nexport default Notification;\r\n","import styled from \"styled-components\"\r\n\r\nexport const StyledNotification = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    background-color: ${(props) => props.backgroundColor};\r\n    width: 200px;\r\n    height: 100px;\r\n    border-radius: 10px;\r\n    box-shadow: 4px 4px 4px rgba(0,0,0,.2);\r\n    position: fixed;\r\n    bottom:0;\r\n    right: 0;\r\n`\r\n\r\nexport const StyledCross = styled.div`\r\n    align-self: flex-start;\r\n`","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import PropTypes from \\\"prop-types\\\";\\r\\n\\r\\nimport Notification from \\\"../src/components/Notification\\\";\\r\\n\\r\\nexport default {\\r\\n  title: \\\"Notification\\\",\\r\\n  component: Notification,\\r\\n  argTypes: {\\r\\n    variant: {\\r\\n      types: \\\"string\\\",\\r\\n      description: \\\"Type of notification\\\",\\r\\n      defaultValue: \\\"success\\\",\\r\\n      options: [\\\"success\\\", \\\"error\\\", \\\"info\\\", \\\"warning\\\"],\\r\\n      control: {\\r\\n        type: \\\"radio\\\",\\r\\n      },\\r\\n    },\\r\\n  },\\r\\n};\\r\\n\\r\\nconst Template = (args) => <Notification {...args} />;\\r\\n\\r\\nexport const Success = Template.bind({});\\r\\nSuccess.args = {\\r\\n  label: \\\"Success\\\",\\r\\n  backgroundColor: \\\"green\\\",\\r\\n  variant: \\\"success\\\",\\r\\n};\\r\\n\\r\\nexport const Error = Template.bind({});\\r\\nError.args = {\\r\\n  label: \\\"Error\\\",\\r\\n  backgroundColor: \\\"red\\\",\\r\\n  variant: \\\"error\\\",\\r\\n};\\r\\n\\r\\nexport const Info = Template.bind({});\\r\\nInfo.args = {\\r\\n  label: \\\"Info\\\",\\r\\n  backgroundColor: \\\"yellow\\\",\\r\\n  variant: \\\"info\\\",\\r\\n};\\r\\n\\r\\nexport const Warning = Template.bind({});\\r\\nWarning.args = {\\r\\n  label: \\\"Error\\\",\\r\\n  backgroundColor: \\\"red\\\",\\r\\n  variant: \\\"warning\\\",\\r\\n};\\r\\n\\r\\nNotification.propTypes = {\\r\\n  label: PropTypes.string,\\r\\n  backgroundColor: PropTypes.string,\\r\\n  variant: PropTypes.oneOf([\\\"success\\\",\\\"error\\\",\\\"warning\\\",\\\"info\\\"])\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Success\":{\"startLoc\":{\"col\":17,\"line\":21},\"endLoc\":{\"col\":53,\"line\":21},\"startBody\":{\"col\":17,\"line\":21},\"endBody\":{\"col\":53,\"line\":21}},\"Error\":{\"startLoc\":{\"col\":17,\"line\":21},\"endLoc\":{\"col\":53,\"line\":21},\"startBody\":{\"col\":17,\"line\":21},\"endBody\":{\"col\":53,\"line\":21}},\"Info\":{\"startLoc\":{\"col\":17,\"line\":21},\"endLoc\":{\"col\":53,\"line\":21},\"startBody\":{\"col\":17,\"line\":21},\"endBody\":{\"col\":53,\"line\":21}},\"Warning\":{\"startLoc\":{\"col\":17,\"line\":21},\"endLoc\":{\"col\":53,\"line\":21},\"startBody\":{\"col\":17,\"line\":21},\"endBody\":{\"col\":53,\"line\":21}}};\n    \nimport PropTypes from \"prop-types\";\r\n\r\nimport Notification from \"../src/components/Notification\";\r\n\r\nexport default {\r\n  title: \"Notification\",\r\n  component: Notification,\r\n  argTypes: {\r\n    variant: {\r\n      types: \"string\",\r\n      description: \"Type of notification\",\r\n      defaultValue: \"success\",\r\n      options: [\"success\", \"error\", \"info\", \"warning\"],\r\n      control: {\r\n        type: \"radio\",\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nconst Template = (args) => <Notification {...args} />;\r\n\r\nexport const Success = Template.bind({});;\r\nSuccess.args = {\r\n  label: \"Success\",\r\n  backgroundColor: \"green\",\r\n  variant: \"success\",\r\n};\r\n\r\nexport const Error = Template.bind({});;\r\nError.args = {\r\n  label: \"Error\",\r\n  backgroundColor: \"red\",\r\n  variant: \"error\",\r\n};\r\n\r\nexport const Info = Template.bind({});;\r\nInfo.args = {\r\n  label: \"Info\",\r\n  backgroundColor: \"yellow\",\r\n  variant: \"info\",\r\n};\r\n\r\nexport const Warning = Template.bind({});\r\nWarning.args = {\r\n  label: \"Error\",\r\n  backgroundColor: \"red\",\r\n  variant: \"warning\",\r\n};\r\n\r\nNotification.propTypes = {\r\n  label: PropTypes.string,\r\n  backgroundColor: PropTypes.string,\r\n  variant: PropTypes.oneOf([\"success\",\"error\",\"warning\",\"info\"])\r\n};\r\n\n\n\nSuccess.parameters = { storySource: { source: \"(args) => <Notification {...args} />\" }, ...Success.parameters };\nError.parameters = { storySource: { source: \"(args) => <Notification {...args} />\" }, ...Error.parameters };\nInfo.parameters = { storySource: { source: \"(args) => <Notification {...args} />\" }, ...Info.parameters };\nWarning.parameters = { storySource: { source: \"(args) => <Notification {...args} />\" }, ...Warning.parameters };"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AAAA;AAEA;AAAA;AAAA;AAGA;AApBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;AC3BA;AAEA;AAIA;AAAA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfsourceRoot":""}